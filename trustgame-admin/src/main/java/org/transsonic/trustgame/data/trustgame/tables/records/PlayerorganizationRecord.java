/*
 * This file is generated by jOOQ.
 */
package org.transsonic.trustgame.data.trustgame.tables.records;


import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record12;
import org.jooq.Row12;
import org.jooq.impl.UpdatableRecordImpl;
import org.transsonic.trustgame.data.trustgame.tables.Playerorganization;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PlayerorganizationRecord extends UpdatableRecordImpl<PlayerorganizationRecord> implements Record12<Integer, String, String, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>trustgame.playerorganization.ID</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>trustgame.playerorganization.ID</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>trustgame.playerorganization.Name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>trustgame.playerorganization.Name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>trustgame.playerorganization.Description</code>. HTML or Markdown
     */
    public void setDescription(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>trustgame.playerorganization.Description</code>. HTML or Markdown
     */
    public String getDescription() {
        return (String) get(2);
    }

    /**
     * Setter for <code>trustgame.playerorganization.TargetProfit</code>. Target line of the score chart
     */
    public void setTargetprofit(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>trustgame.playerorganization.TargetProfit</code>. Target line of the score chart
     */
    public Integer getTargetprofit() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>trustgame.playerorganization.TargetSatisfaction</code>. Target line of the score chart
     */
    public void setTargetsatisfaction(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>trustgame.playerorganization.TargetSatisfaction</code>. Target line of the score chart
     */
    public Integer getTargetsatisfaction() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>trustgame.playerorganization.TargetSustainability</code>. Target line of the score chart
     */
    public void setTargetsustainability(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>trustgame.playerorganization.TargetSustainability</code>. Target line of the score chart
     */
    public Integer getTargetsustainability() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>trustgame.playerorganization.StartProfit</code>. Start score of profit for a player
     */
    public void setStartprofit(Integer value) {
        set(6, value);
    }

    /**
     * Getter for <code>trustgame.playerorganization.StartProfit</code>. Start score of profit for a player
     */
    public Integer getStartprofit() {
        return (Integer) get(6);
    }

    /**
     * Setter for <code>trustgame.playerorganization.StartSatisfaction</code>. Start score of satisfaction for a player
     */
    public void setStartsatisfaction(Integer value) {
        set(7, value);
    }

    /**
     * Getter for <code>trustgame.playerorganization.StartSatisfaction</code>. Start score of satisfaction for a player
     */
    public Integer getStartsatisfaction() {
        return (Integer) get(7);
    }

    /**
     * Setter for <code>trustgame.playerorganization.StartSustainability</code>. Start score of sustainability for a player
     */
    public void setStartsustainability(Integer value) {
        set(8, value);
    }

    /**
     * Getter for <code>trustgame.playerorganization.StartSustainability</code>. Start score of sustainability for a player
     */
    public Integer getStartsustainability() {
        return (Integer) get(8);
    }

    /**
     * Setter for <code>trustgame.playerorganization.MaxProfit</code>. Top of the score chart
     */
    public void setMaxprofit(Integer value) {
        set(9, value);
    }

    /**
     * Getter for <code>trustgame.playerorganization.MaxProfit</code>. Top of the score chart
     */
    public Integer getMaxprofit() {
        return (Integer) get(9);
    }

    /**
     * Setter for <code>trustgame.playerorganization.MaxSatisfaction</code>. Top of the score chart
     */
    public void setMaxsatisfaction(Integer value) {
        set(10, value);
    }

    /**
     * Getter for <code>trustgame.playerorganization.MaxSatisfaction</code>. Top of the score chart
     */
    public Integer getMaxsatisfaction() {
        return (Integer) get(10);
    }

    /**
     * Setter for <code>trustgame.playerorganization.MaxSustainability</code>. Top of the score chart
     */
    public void setMaxsustainability(Integer value) {
        set(11, value);
    }

    /**
     * Getter for <code>trustgame.playerorganization.MaxSustainability</code>. Top of the score chart
     */
    public Integer getMaxsustainability() {
        return (Integer) get(11);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record12 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row12<Integer, String, String, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer> fieldsRow() {
        return (Row12) super.fieldsRow();
    }

    @Override
    public Row12<Integer, String, String, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer> valuesRow() {
        return (Row12) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Playerorganization.PLAYERORGANIZATION.ID;
    }

    @Override
    public Field<String> field2() {
        return Playerorganization.PLAYERORGANIZATION.NAME;
    }

    @Override
    public Field<String> field3() {
        return Playerorganization.PLAYERORGANIZATION.DESCRIPTION;
    }

    @Override
    public Field<Integer> field4() {
        return Playerorganization.PLAYERORGANIZATION.TARGETPROFIT;
    }

    @Override
    public Field<Integer> field5() {
        return Playerorganization.PLAYERORGANIZATION.TARGETSATISFACTION;
    }

    @Override
    public Field<Integer> field6() {
        return Playerorganization.PLAYERORGANIZATION.TARGETSUSTAINABILITY;
    }

    @Override
    public Field<Integer> field7() {
        return Playerorganization.PLAYERORGANIZATION.STARTPROFIT;
    }

    @Override
    public Field<Integer> field8() {
        return Playerorganization.PLAYERORGANIZATION.STARTSATISFACTION;
    }

    @Override
    public Field<Integer> field9() {
        return Playerorganization.PLAYERORGANIZATION.STARTSUSTAINABILITY;
    }

    @Override
    public Field<Integer> field10() {
        return Playerorganization.PLAYERORGANIZATION.MAXPROFIT;
    }

    @Override
    public Field<Integer> field11() {
        return Playerorganization.PLAYERORGANIZATION.MAXSATISFACTION;
    }

    @Override
    public Field<Integer> field12() {
        return Playerorganization.PLAYERORGANIZATION.MAXSUSTAINABILITY;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public String component3() {
        return getDescription();
    }

    @Override
    public Integer component4() {
        return getTargetprofit();
    }

    @Override
    public Integer component5() {
        return getTargetsatisfaction();
    }

    @Override
    public Integer component6() {
        return getTargetsustainability();
    }

    @Override
    public Integer component7() {
        return getStartprofit();
    }

    @Override
    public Integer component8() {
        return getStartsatisfaction();
    }

    @Override
    public Integer component9() {
        return getStartsustainability();
    }

    @Override
    public Integer component10() {
        return getMaxprofit();
    }

    @Override
    public Integer component11() {
        return getMaxsatisfaction();
    }

    @Override
    public Integer component12() {
        return getMaxsustainability();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public String value3() {
        return getDescription();
    }

    @Override
    public Integer value4() {
        return getTargetprofit();
    }

    @Override
    public Integer value5() {
        return getTargetsatisfaction();
    }

    @Override
    public Integer value6() {
        return getTargetsustainability();
    }

    @Override
    public Integer value7() {
        return getStartprofit();
    }

    @Override
    public Integer value8() {
        return getStartsatisfaction();
    }

    @Override
    public Integer value9() {
        return getStartsustainability();
    }

    @Override
    public Integer value10() {
        return getMaxprofit();
    }

    @Override
    public Integer value11() {
        return getMaxsatisfaction();
    }

    @Override
    public Integer value12() {
        return getMaxsustainability();
    }

    @Override
    public PlayerorganizationRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public PlayerorganizationRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public PlayerorganizationRecord value3(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public PlayerorganizationRecord value4(Integer value) {
        setTargetprofit(value);
        return this;
    }

    @Override
    public PlayerorganizationRecord value5(Integer value) {
        setTargetsatisfaction(value);
        return this;
    }

    @Override
    public PlayerorganizationRecord value6(Integer value) {
        setTargetsustainability(value);
        return this;
    }

    @Override
    public PlayerorganizationRecord value7(Integer value) {
        setStartprofit(value);
        return this;
    }

    @Override
    public PlayerorganizationRecord value8(Integer value) {
        setStartsatisfaction(value);
        return this;
    }

    @Override
    public PlayerorganizationRecord value9(Integer value) {
        setStartsustainability(value);
        return this;
    }

    @Override
    public PlayerorganizationRecord value10(Integer value) {
        setMaxprofit(value);
        return this;
    }

    @Override
    public PlayerorganizationRecord value11(Integer value) {
        setMaxsatisfaction(value);
        return this;
    }

    @Override
    public PlayerorganizationRecord value12(Integer value) {
        setMaxsustainability(value);
        return this;
    }

    @Override
    public PlayerorganizationRecord values(Integer value1, String value2, String value3, Integer value4, Integer value5, Integer value6, Integer value7, Integer value8, Integer value9, Integer value10, Integer value11, Integer value12) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PlayerorganizationRecord
     */
    public PlayerorganizationRecord() {
        super(Playerorganization.PLAYERORGANIZATION);
    }

    /**
     * Create a detached, initialised PlayerorganizationRecord
     */
    public PlayerorganizationRecord(Integer id, String name, String description, Integer targetprofit, Integer targetsatisfaction, Integer targetsustainability, Integer startprofit, Integer startsatisfaction, Integer startsustainability, Integer maxprofit, Integer maxsatisfaction, Integer maxsustainability) {
        super(Playerorganization.PLAYERORGANIZATION);

        setId(id);
        setName(name);
        setDescription(description);
        setTargetprofit(targetprofit);
        setTargetsatisfaction(targetsatisfaction);
        setTargetsustainability(targetsustainability);
        setStartprofit(startprofit);
        setStartsatisfaction(startsatisfaction);
        setStartsustainability(startsustainability);
        setMaxprofit(maxprofit);
        setMaxsatisfaction(maxsatisfaction);
        setMaxsustainability(maxsustainability);
    }
}
